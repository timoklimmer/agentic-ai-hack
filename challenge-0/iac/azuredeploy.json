{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.31.34.60546",
      "templateHash": "simplified-template"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "swedencentral",
      "allowedValues": [
        "swedencentral"
      ],
      "metadata": {
        "description": "Azure location where resources should be deployed (e.g., swedencentral)"
      }
    },
    "locationDocumentIntelligence": {
      "type": "string",
      "defaultValue": "westeurope",
      "allowedValues": [
        "westeurope"
      ],
      "metadata": {
        "description": "Azure location where Azure Document Intelligence should be deployed (e.g., westeurope)"
      }
    },
    "servicePrincipalObjectId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional: Object ID (Principal ID) of the service principal to grant permissions to AI Foundry resources"
      }
    }
  },
  "variables": {
    "prefix": "msagthack",
    "suffix": "[uniqueString(resourceGroup().id)]",
    "storageAccountName": "[replace(format('{0}-sa-{1}', variables('prefix'), variables('suffix')), '-', '')]",
    "logAnalyticsWorkspaceName": "[format('{0}-loganalytics-{1}', variables('prefix'), variables('suffix'))]",
    "searchServiceName": "[format('{0}-search-{1}', variables('prefix'), variables('suffix'))]",
    "containerRegistryName": "[replace(format('{0}cr{1}', variables('prefix'), variables('suffix')), '-', '')]",
    "keyVaultName": "[format('{0}kv{1}', variables('prefix'), variables('suffix'))]",
    "aiFoundryName": "[format('{0}-aifoundry-{1}', variables('prefix'), variables('suffix'))]",
    "aiProjectName": "[format('{0}-aiproject-{1}', variables('prefix'), variables('suffix'))]",
    "applicationInsightsName": "[format('{0}-appinsights-{1}', variables('prefix'), variables('suffix'))]",
    "cosmosDbAccountName": "[format('{0}-cosmos-{1}', variables('prefix'), variables('suffix'))]",
    "cognitiveServicesUserRoleId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'a97b65f3-24c7-4388-baec-2e87135dc908')]",
    "searchServiceContributorRoleId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7ca78c08-252a-4471-8644-bb5ff32d4ba0')]",
    "aiDeveloperRoleId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '64702f94-c441-49e6-a78b-ef80e0188fee')]",
    "contributorRoleId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-05-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "allowBlobPublicAccess": false,
        "networkAcls": {
          "defaultAction": "Allow"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2021-06-01",
      "name": "[variables('logAnalyticsWorkspaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "retentionInDays": 30,
        "features": {
          "searchVersion": 1
        },
        "sku": {
          "name": "PerGB2018"
        }
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2023-04-15",
      "name": "[variables('cosmosDbAccountName')]",
      "location": "[parameters('location')]",
      "kind": "GlobalDocumentDB",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session"
        },
        "locations": [
          {
            "locationName": "[parameters('location')]",
            "failoverPriority": 0,
            "isZoneRedundant": false
          }
        ],
        "databaseAccountOfferType": "Standard",
        "enableAutomaticFailover": false,
        "enableMultipleWriteLocations": false,
        "capabilities": [
          {
            "name": "EnableServerless"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Search/searchServices",
      "apiVersion": "2023-11-01",
      "name": "[variables('searchServiceName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "basic"
      },
      "properties": {
        "hostingMode": "default",
        "replicaCount": 1,
        "partitionCount": 1
      }
    },
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2023-07-01",
      "name": "[variables('containerRegistryName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "adminUserEnabled": true
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('applicationInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-07-01",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [],
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": false,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 90,
        "enableRbacAuthorization": true
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2025-04-01-preview",
      "name": "[variables('aiFoundryName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "sku": {
        "name": "S0"
      },
      "kind": "AIServices",
      "properties": {
        "allowProjectManagement": true,
        "customSubDomainName": "[variables('aiFoundryName')]",
        "disableLocalAuth": false
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts/projects",
      "apiVersion": "2025-04-01-preview",
      "name": "[format('{0}/{1}', variables('aiFoundryName'), variables('aiProjectName'))]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {},
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiFoundryName'))]"
      ]
    },
    {
      "type": "Microsoft.CognitiveServices/accounts/deployments",
      "apiVersion": "2024-10-01",
      "name": "[format('{0}/{1}', variables('aiFoundryName'), 'gpt-4.1-mini')]",
      "sku": {
        "capacity": 500,
        "name": "GlobalStandard"
      },
      "properties": {
        "model": {
          "name": "gpt-4.1-mini",
          "format": "OpenAI"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiFoundryName'))]"
      ]
    },
    {
      "type": "Microsoft.CognitiveServices/accounts/deployments",
      "apiVersion": "2024-10-01",
      "name": "[format('{0}/{1}', variables('aiFoundryName'), 'text-embedding-ada-002')]",
      "sku": {
        "capacity": 200,
        "name": "GlobalStandard"
      },
      "properties": {
        "model": {
          "name": "text-embedding-ada-002",
          "format": "OpenAI"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiFoundryName'))]",
        "[resourceId('Microsoft.CognitiveServices/accounts/deployments', variables('aiFoundryName'), 'gpt-4.1-mini')]"

      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(resourceId('Microsoft.CognitiveServices/accounts', variables('aiFoundryName')), resourceId('Microsoft.CognitiveServices/accounts/projects', variables('aiFoundryName'), variables('aiProjectName')), variables('cognitiveServicesUserRoleId'))]",
      "scope": "[format('Microsoft.CognitiveServices/accounts/{0}', variables('aiFoundryName'))]",
      "properties": {
        "roleDefinitionId": "[variables('cognitiveServicesUserRoleId')]",
        "principalId": "[reference(resourceId('Microsoft.CognitiveServices/accounts/projects', variables('aiFoundryName'), variables('aiProjectName')), '2025-04-01-preview', 'full').identity.principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiFoundryName'))]",
        "[resourceId('Microsoft.CognitiveServices/accounts/projects', variables('aiFoundryName'), variables('aiProjectName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(resourceId('Microsoft.Search/searchServices', variables('searchServiceName')), resourceId('Microsoft.CognitiveServices/accounts', variables('aiFoundryName')), variables('searchServiceContributorRoleId'))]",
      "scope": "[format('Microsoft.Search/searchServices/{0}', variables('searchServiceName'))]",
      "properties": {
        "roleDefinitionId": "[variables('searchServiceContributorRoleId')]",
        "principalId": "[reference(resourceId('Microsoft.CognitiveServices/accounts', variables('aiFoundryName')), '2025-04-01-preview', 'full').identity.principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiFoundryName'))]",
        "[resourceId('Microsoft.Search/searchServices', variables('searchServiceName'))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('servicePrincipalObjectId')))]",
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(resourceId('Microsoft.CognitiveServices/accounts', variables('aiFoundryName')), parameters('servicePrincipalObjectId'), variables('cognitiveServicesUserRoleId'))]",
      "scope": "[format('Microsoft.CognitiveServices/accounts/{0}', variables('aiFoundryName'))]",
      "properties": {
        "roleDefinitionId": "[variables('cognitiveServicesUserRoleId')]",
        "principalId": "[parameters('servicePrincipalObjectId')]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiFoundryName'))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('servicePrincipalObjectId')))]",
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(resourceId('Microsoft.CognitiveServices/accounts', variables('aiFoundryName')), parameters('servicePrincipalObjectId'), variables('aiDeveloperRoleId'))]",
      "scope": "[format('Microsoft.CognitiveServices/accounts/{0}', variables('aiFoundryName'))]",
      "properties": {
        "roleDefinitionId": "[variables('aiDeveloperRoleId')]",
        "principalId": "[parameters('servicePrincipalObjectId')]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiFoundryName'))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('servicePrincipalObjectId')))]",
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(resourceId('Microsoft.CognitiveServices/accounts', variables('aiFoundryName')), parameters('servicePrincipalObjectId'), variables('contributorRoleId'))]",
      "scope": "[format('Microsoft.CognitiveServices/accounts/{0}', variables('aiFoundryName'))]",
      "properties": {
        "roleDefinitionId": "[variables('contributorRoleId')]",
        "principalId": "[parameters('servicePrincipalObjectId')]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiFoundryName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(resourceId('Microsoft.Search/searchServices', variables('searchServiceName')), resourceId('Microsoft.CognitiveServices/accounts/projects', variables('aiFoundryName'), variables('aiProjectName')), variables('searchServiceContributorRoleId'))]",
      "scope": "[format('Microsoft.Search/searchServices/{0}', variables('searchServiceName'))]",
      "properties": {
        "roleDefinitionId": "[variables('searchServiceContributorRoleId')]",
        "principalId": "[reference(resourceId('Microsoft.CognitiveServices/accounts/projects', variables('aiFoundryName'), variables('aiProjectName')), '2025-04-01-preview', 'full').identity.principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts/projects', variables('aiFoundryName'), variables('aiProjectName'))]",
        "[resourceId('Microsoft.Search/searchServices', variables('searchServiceName'))]"
      ]
    },
    {
      "type": "Microsoft.CognitiveServices/accounts/connections",
      "apiVersion": "2025-04-01-preview",
      "name": "[format('{0}/{1}-aisearch', variables('aiFoundryName'), variables('aiFoundryName'))]",
      "properties": {
        "category": "CognitiveSearch",
        "target": "[format('https://{0}.search.windows.net', variables('searchServiceName'))]",
        "authType": "ApiKey",
        "isSharedToAll": true,
        "credentials": {
          "key": "[listAdminKeys(resourceId('Microsoft.Search/searchServices', variables('searchServiceName')), '2023-11-01').primaryKey]"
        },
        "metadata": {
          "ApiType": "Azure",
          "ResourceId": "[resourceId('Microsoft.Search/searchServices', variables('searchServiceName'))]",
          "location": "[parameters('location')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiFoundryName'))]",
        "[resourceId('Microsoft.Search/searchServices', variables('searchServiceName'))]"
      ]
    }
  ],
  "outputs": {
    "storageAccountName": {
      "type": "string",
      "value": "[variables('storageAccountName')]"
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "value": "[variables('logAnalyticsWorkspaceName')]"
    },
    "searchServiceName": {
      "type": "string",
      "value": "[variables('searchServiceName')]"
    },
    "aiFoundryHubName": {
      "type": "string",
      "value": "[variables('aiFoundryName')]"
    },
    "aiFoundryProjectName": {
      "type": "string",
      "value": "[variables('aiProjectName')]" 
    },
    "keyVaultName": {
      "type": "string",
      "value": "[variables('keyVaultName')]"
    },
    "containerRegistryName": {
      "type": "string",
      "value": "[variables('containerRegistryName')]"
    },
    "applicationInsightsName": {
      "type": "string",
      "value": "[variables('applicationInsightsName')]"
    },
    "searchServiceEndpoint": {
      "type": "string",
      "value": "[format('https://{0}.search.windows.net/', variables('searchServiceName'))]"
    },
    "aiFoundryHubEndpoint": {
      "type": "string",
      "value": "[format('https://ml.azure.com/home?wsid={0}', resourceId('Microsoft.CognitiveServices/accounts', variables('aiFoundryName')))]"
    },
    "aiFoundryProjectEndpoint": {
      "type": "string",
      "value": "[format('https://ai.azure.com/build/overview?wsid={0}', resourceId('Microsoft.CognitiveServices/accounts/projects', variables('aiFoundryName'), variables('aiProjectName')))]"
    },
    "cosmosDbAccountName": {
  "type": "string",
      "value": "[variables('cosmosDbAccountName')]"
    },
    "cosmosDbEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName')), '2023-04-15').documentEndpoint]"
    }
  }
}
